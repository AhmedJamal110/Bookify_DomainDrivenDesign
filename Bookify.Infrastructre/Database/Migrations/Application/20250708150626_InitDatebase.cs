// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Bookify.Infrastructre.Database.Migrations.Application
{
    /// <inheritdoc />
    public partial class InitDatebase : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "Application");

            migrationBuilder.CreateTable(
                name: "apartments",
                schema: "Application",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    name = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: false),
                    description = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: false),
                    address_Country = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    address_State = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    address_ZipCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    address_City = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    address_Street = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    price_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    price_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    cleaningFee_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    cleaningFee_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    lastBookedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    amenities = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pK_apartments", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "user",
                schema: "Application",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    firstName = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: false),
                    lastName = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: false),
                    email = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pK_user", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "bookings",
                schema: "Application",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    userId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    apaermentId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    apartmentId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    duration_Start = table.Column<DateOnly>(type: "date", nullable: false),
                    duration_End = table.Column<DateOnly>(type: "date", nullable: false),
                    priceForPeriod_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    priceForPeriod_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    cleaningFee_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    cleaningFee_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    amenitiesUpCharge_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    amenitiesUpCharge_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    totalPrice_Amount = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    totalPrice_Currency = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    status = table.Column<int>(type: "int", nullable: false),
                    createdOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    confirmedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    refectedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    compeletedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    cancelledOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pK_bookings", x => x.id);
                    table.ForeignKey(
                        name: "fK_bookings_apartments_apaermentId",
                        column: x => x.apaermentId,
                        principalSchema: "Application",
                        principalTable: "apartments",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fK_bookings_apartments_apartmentId",
                        column: x => x.apartmentId,
                        principalSchema: "Application",
                        principalTable: "apartments",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fK_bookings_user_userId",
                        column: x => x.userId,
                        principalSchema: "Application",
                        principalTable: "user",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "iX_bookings_apaermentId",
                schema: "Application",
                table: "bookings",
                column: "apaermentId");

            migrationBuilder.CreateIndex(
                name: "iX_bookings_apartmentId",
                schema: "Application",
                table: "bookings",
                column: "apartmentId");

            migrationBuilder.CreateIndex(
                name: "iX_bookings_userId",
                schema: "Application",
                table: "bookings",
                column: "userId");

            migrationBuilder.CreateIndex(
                name: "iX_user_email",
                schema: "Application",
                table: "user",
                column: "email",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "bookings",
                schema: "Application");

            migrationBuilder.DropTable(
                name: "apartments",
                schema: "Application");

            migrationBuilder.DropTable(
                name: "user",
                schema: "Application");
        }
    }
}
